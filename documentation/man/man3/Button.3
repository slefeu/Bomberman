.TH "Button" 3 "Wed Jun 15 2022" "Version 1.0" "Indie Studio" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Button
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBButton\fP (const std::string &texture_path, float pos_x, float pos_y, std::function< void(void)> function, const std::string &font_path, const std::string &message, int textPosX, int textPosY) noexcept"
.br
.ti -1c
.RI "\fBButton\fP (const std::string &texture_path, float pos_x, float pos_y, std::function< void(void)> function, const std::string &font_path, const std::string &message, int textPosX, int textPosY, bool sound) noexcept"
.br
.ti -1c
.RI "\fBButton\fP (const std::string &texture_path, float pos_x, float pos_y, std::function< void(void)> function, const std::string &font_path, const std::string &message) noexcept"
.br
.ti -1c
.RI "\fBButton\fP (const std::string &texture_path, float pos_x, float pos_y, std::function< void(void)> function, const std::string &font_path, const std::string &message, float scale) noexcept"
.br
.ti -1c
.RI "\fBButton\fP (const \fBButton\fP &other) noexcept=delete"
.br
.ti -1c
.RI "\fBButton\fP (\fBButton\fP &&other) noexcept=default"
.br
.ti -1c
.RI "\fBButton\fP & \fBoperator=\fP (const \fBButton\fP &rhs) noexcept=delete"
.br
.ti -1c
.RI "\fBButton\fP & \fBoperator=\fP (\fBButton\fP &&rhs) noexcept=default"
.br
.ti -1c
.RI "void \fBdraw\fP () const noexcept"
.br
.ti -1c
.RI "void \fBdraw\fP (float scale) const noexcept"
.br
.ti -1c
.RI "void \fBaction\fP () const noexcept"
.br
.ti -1c
.RI "bool \fBcheckCollision\fP (const \fBMouseHandler\fP &mouse_) noexcept"
.br
.ti -1c
.RI "void \fBsetState\fP (int state) noexcept"
.br
.ti -1c
.RI "void \fBsetPosition\fP (const Vector2 &pos) noexcept"
.br
.ti -1c
.RI "void \fBsetTextPosition\fP (const Vector2 &pos) noexcept"
.br
.ti -1c
.RI "void \fBsetText\fP (std::string new_text) noexcept"
.br
.ti -1c
.RI "void \fBinvertDisplay\fP () noexcept"
.br
.ti -1c
.RI "void \fBsetTextSize\fP (int size) noexcept"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Button::Button (const std::string & texture_path, float pos_x, float pos_y, std::function< void(void)> function, const std::string & font_path, const std::string & message, int textPosX, int textPosY)\fC [noexcept]\fP"
It creates a button with a texture, a position, a function to execute when clicked, a font, a message, and a text position
.PP
\fBParameters\fP
.RS 4
\fItexture_path\fP The path to the texture of the button\&. 
.br
\fIpos_x\fP The x position of the button 
.br
\fIpos_y\fP The y position of the button 
.br
\fIfunction\fP The function that will be called when the button is clicked\&. 
.br
\fIfont_path\fP The path to the font file\&. 
.br
\fImessage\fP The text that will be displayed on the button\&. 
.br
\fItextPosX\fP The X position of the text relative to the button\&. 
.br
\fItextPosY\fP The Y position of the text\&. 
.RE
.PP

.SS "Button::Button (const std::string & texture_path, float pos_x, float pos_y, std::function< void(void)> function, const std::string & font_path, const std::string & message)\fC [noexcept]\fP"
It initializes the button's texture, sound effects, task, text, color, and rectangle
.PP
\fBParameters\fP
.RS 4
\fItexture_path\fP The path to the texture of the button\&. 
.br
\fIpos_x\fP The x position of the button\&. 
.br
\fIpos_y\fP The y position of the button\&. 
.br
\fIfunction\fP The function that will be called when the button is clicked\&. 
.br
\fIfont_path\fP The path to the font file\&. 
.br
\fImessage\fP The text that will be displayed on the button\&. 
.RE
.PP

.SS "Button::Button (const std::string & texture_path, float pos_x, float pos_y, std::function< void(void)> function, const std::string & font_path, const std::string & message, float scale)\fC [noexcept]\fP"
It creates a button with a texture, a position, a function to execute when clicked, a font, a message, and a scale
.PP
\fBParameters\fP
.RS 4
\fItexture_path\fP The path to the texture of the button\&. 
.br
\fIpos_x\fP The x position of the button 
.br
\fIpos_y\fP The y position of the button\&. 
.br
\fIfunction\fP The function that will be called when the button is clicked\&. 
.br
\fIfont_path\fP The path to the font file\&. 
.br
\fImessage\fP The text that will be displayed on the button\&. 
.br
\fIscale\fP The scale of the button\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void Button::action () const\fC [noexcept]\fP"
The function \fBaction()\fP calls the function task_()\&. 
.SS "bool Button::checkCollision (const \fBMouseHandler\fP & mouse_)\fC [noexcept]\fP"
If the mouse is colliding with the button, then change the color of the button to pink, play the hover sound effect, and if the mouse is clicked, then change the color of the button to white, play the clicked sound effect, and return true
.PP
\fBParameters\fP
.RS 4
\fImouse_\fP The mouse handler object\&.
.RE
.PP
\fBReturns\fP
.RS 4
A boolean value\&. 
.RE
.PP

.SS "void Button::draw () const\fC [noexcept]\fP"
It draws the button's texture and text 
.SS "void Button::invertDisplay ()\fC [noexcept]\fP"
It inverts the display of the button 
.SS "void Button::setPosition (const Vector2 & pos)\fC [noexcept]\fP"
It sets the position of the button
.PP
\fBParameters\fP
.RS 4
\fIpos\fP The position of the button\&. 
.RE
.PP

.SS "void Button::setState (int state)\fC [noexcept]\fP"
It sets the state of the button and changes the color of the button based on the state
.PP
\fBParameters\fP
.RS 4
\fIstate\fP 0 = normal, 1 = hover, 2 = pressed 
.RE
.PP

.SS "void Button::setText (std::string new_text)\fC [noexcept]\fP"
It sets the text of the button
.PP
\fBParameters\fP
.RS 4
\fInew_text\fP The new text to be displayed on the button\&. 
.RE
.PP

.SS "void Button::setTextPosition (const Vector2 & pos)\fC [noexcept]\fP"
It sets the position of the text
.PP
\fBParameters\fP
.RS 4
\fIpos\fP The position of the text\&. 
.RE
.PP

.SS "void Button::setTextSize (int size)\fC [noexcept]\fP"
Sets the size of the text
.PP
\fBParameters\fP
.RS 4
\fIsize\fP The size of the text\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Indie Studio from the source code\&.
