.TH "GameData" 3 "Wed Jun 15 2022" "Version 1.0" "Indie Studio" \" -*- nroff -*-
.ad l
.nh
.SH NAME
GameData
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBAData\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBGameData\fP (const \fBGameData\fP &other) noexcept=delete"
.br
.ti -1c
.RI "\fBGameData\fP (\fBGameData\fP &&other) noexcept=delete"
.br
.ti -1c
.RI "\fBGameData\fP & \fBoperator=\fP (const \fBGameData\fP &rhs) noexcept=delete"
.br
.ti -1c
.RI "\fBGameData\fP & \fBoperator=\fP (\fBGameData\fP &&rhs) noexcept=delete"
.br
.ti -1c
.RI "\fBVector2D\fP \fBgetMousePos\fP () const noexcept"
.br
.ti -1c
.RI "void \fBupdateMouse\fP () noexcept"
.br
.ti -1c
.RI "void \fBsetCurrentScene\fP (const bomberman::SceneType &scene) noexcept"
.br
.ti -1c
.RI "bomberman::SceneType \fBgetCurrentScene\fP () const noexcept"
.br
.ti -1c
.RI "\fBMouseHandler\fP \fBgetMouseHandler\fP () const noexcept"
.br
.ti -1c
.RI "int \fBgetNbPlayers\fP () const noexcept"
.br
.ti -1c
.RI "void \fBsetNbPlayers\fP (int value) noexcept"
.br
.ti -1c
.RI "void \fBaddModel\fP (const std::string_view &model_path, const std::string_view &texture_path) noexcept"
.br
.ti -1c
.RI "void \fBaddSprite\fP (const std::string_view &texture_path, float scale) noexcept"
.br
.ti -1c
.RI "void \fBaddPlayer\fP (int index) noexcept"
.br
.ti -1c
.RI "void \fBaddItem\fP (bomberman::ItemType item) noexcept"
.br
.ti -1c
.RI "void \fBaddItem\fP (const \fBVector3D\fP &position) noexcept"
.br
.ti -1c
.RI "void \fBaddCrate\fP (\fBVector3D\fP position) noexcept"
.br
.ti -1c
.RI "void \fBaddWall\fP (\fBVector3D\fP position) noexcept"
.br
.ti -1c
.RI "void \fBaddFire\fP (std::unique_ptr< \fBFire\fP > fire) noexcept"
.br
.ti -1c
.RI "void \fBaddBomb\fP (\fBVector3D\fP position, \fBPlayer\fP &ref, int size) noexcept"
.br
.ti -1c
.RI "void \fBclearEntities\fP () noexcept"
.br
.ti -1c
.RI "void \fBsaveGame\fP ()"
.br
.ti -1c
.RI "void \fBloadGame\fP ()"
.br
.ti -1c
.RI "void \fBunloadAll\fP () noexcept"
.br
.ti -1c
.RI "std::string \fBtryToLoad\fP () const noexcept"
.br
.ti -1c
.RI "void \fBsetTryToLoad\fP (const std::string &value) noexcept"
.br
.ti -1c
.RI "std::vector< std::unique_ptr< \fBEntity\fP > > & \fBgetPlayers\fP () noexcept"
.br
.ti -1c
.RI "std::vector< std::unique_ptr< \fBModel3D\fP > > & \fBgetModels\fP () noexcept"
.br
.ti -1c
.RI "std::vector< std::unique_ptr< \fBSprite\fP > > & \fBgetSprites\fP () noexcept"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Member Function Documentation"
.PP 
.SS "void GameData::addBomb (\fBVector3D\fP position, \fBPlayer\fP & player_ref, int size)\fC [noexcept]\fP"
It creates a new bomb entity and adds it to the list of entities
.PP
\fBParameters\fP
.RS 4
\fIposition\fP The position of the bomb 
.br
\fIplayer_ref\fP A reference to the player that placed the bomb\&. 
.br
\fIsize\fP the size of the bomb 
.RE
.PP

.SS "void GameData::addCrate (\fBVector3D\fP position)\fC [noexcept]\fP"
It creates a new crate at the given position and adds it to the list of entities
.PP
\fBParameters\fP
.RS 4
\fIposition\fP The position of the crate\&. 
.RE
.PP

.SS "void GameData::addFire (std::unique_ptr< \fBFire\fP > fire)\fC [noexcept]\fP"
It adds a fire to the game
.PP
\fBParameters\fP
.RS 4
\fIfire\fP The fire to add to the game\&. 
.RE
.PP

.SS "void GameData::addItem (bomberman::ItemType item)\fC [noexcept]\fP"
It creates a new item and adds it to the list of entities
.PP
\fBParameters\fP
.RS 4
\fIitem\fP The type of item to add\&. 
.RE
.PP

.SS "void GameData::addItem (const \fBVector3D\fP & position)\fC [noexcept]\fP"
It creates a new item at the given position and adds it to the list of entities
.PP
\fBParameters\fP
.RS 4
\fIposition\fP The position of the item\&. 
.RE
.PP

.SS "void GameData::addModel (const std::string_view & model_path, const std::string_view & texture_path)\fC [noexcept]\fP"
It creates a new model and adds it to the list of models
.PP
\fBParameters\fP
.RS 4
\fImodel_path\fP The path to the model file\&. 
.br
\fItexture_path\fP The path to the texture file\&. 
.RE
.PP

.SS "void GameData::addPlayer (int index)\fC [noexcept]\fP"
It creates a new player object and adds it to the players_ vector
.PP
\fBParameters\fP
.RS 4
\fIindex\fP The index of the player\&. 
.RE
.PP

.SS "void GameData::addSprite (const std::string_view & texture_path, float scale)\fC [noexcept]\fP"
It creates a new sprite, adds it to the sprites_ vector, and returns a reference to the new sprite
.PP
\fBParameters\fP
.RS 4
\fItexture_path\fP The path to the texture file\&. 
.br
\fIscale\fP The scale of the sprite\&. 
.RE
.PP

.SS "void GameData::addWall (\fBVector3D\fP position)\fC [noexcept]\fP"
It creates a new wall entity and adds it to the list of entities
.PP
\fBParameters\fP
.RS 4
\fIposition\fP The position of the wall\&. 
.RE
.PP

.SS "void GameData::clearEntities ()\fC [noexcept]\fP"
It clears the entities_ vector 
.SS "std::vector< std::unique_ptr< \fBModel3D\fP > > & GameData::getModels ()\fC [noexcept]\fP"
It returns a reference to the vector of unique pointers to \fBModel3D\fP objects
.PP
\fBReturns\fP
.RS 4
A reference to the vector of unique pointers to \fBModel3D\fP objects\&. 
.RE
.PP

.SS "\fBMouseHandler\fP GameData::getMouseHandler () const\fC [noexcept]\fP"
It returns a copy of the \fBMouseHandler\fP object\&.
.PP
\fBReturns\fP
.RS 4
A reference to the mouse_ object\&. 
.RE
.PP

.SS "\fBVector2D\fP GameData::getMousePos () const\fC [noexcept]\fP"
This function returns the mouse position\&.
.PP
\fBReturns\fP
.RS 4
The mouse position\&. 
.RE
.PP

.SS "int GameData::getNbPlayers () const\fC [noexcept]\fP"
It returns the number of players in the game
.PP
\fBReturns\fP
.RS 4
The number of players in the game\&. 
.RE
.PP

.SS "std::vector< std::unique_ptr< \fBEntity\fP > > & GameData::getPlayers ()\fC [noexcept]\fP"
It returns a reference to the vector of unique pointers to \fBEntity\fP objects
.PP
\fBReturns\fP
.RS 4
A reference to the vector of unique pointers to \fBEntity\fP objects\&. 
.RE
.PP

.SS "std::vector< std::unique_ptr< \fBSprite\fP > > & GameData::getSprites ()\fC [noexcept]\fP"
It returns a reference to the vector of unique pointers to \fBSprite\fP objects
.PP
\fBReturns\fP
.RS 4
A reference to the sprites_ vector\&. 
.RE
.PP

.SS "void GameData::setCurrentScene (const bomberman::SceneType & scene)\fC [noexcept]\fP"
It sets the current scene to the scene passed in as a parameter
.PP
\fBParameters\fP
.RS 4
\fIscene\fP The scene to set as the current scene\&. 
.RE
.PP

.SS "void GameData::setNbPlayers (int value)\fC [noexcept]\fP"
It sets the number of players
.PP
\fBParameters\fP
.RS 4
\fIvalue\fP The value to set the parameter to\&. 
.RE
.PP

.SS "void GameData::setTryToLoad (const std::string & value)\fC [noexcept]\fP"
It sets the value of the try_to_load member variable
.PP
\fBParameters\fP
.RS 4
\fIvalue\fP The value to set the parameter to\&. 
.RE
.PP

.SS "std::string GameData::tryToLoad () const\fC [noexcept]\fP"
It returns the string that is used to try to load the game data\&.
.PP
\fBReturns\fP
.RS 4
The try_to_load variable\&. 
.RE
.PP

.SS "void GameData::unloadAll ()\fC [noexcept]\fP"
It clears all the data containers 
.SS "void GameData::updateMouse ()\fC [virtual]\fP, \fC [noexcept]\fP"
It updates the mouse 
.PP
Implements \fBAData\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Indie Studio from the source code\&.
