.TH "Transform3D" 3 "Wed Jun 15 2022" "Version 1.0" "Indie Studio" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Transform3D
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBComponent\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBTransform3D\fP (const \fBTransform3D\fP &other) noexcept=default"
.br
.ti -1c
.RI "\fBTransform3D\fP (\fBTransform3D\fP &&other) noexcept=default"
.br
.ti -1c
.RI "\fBTransform3D\fP & \fBoperator=\fP (const \fBTransform3D\fP &rhs) noexcept=default"
.br
.ti -1c
.RI "\fBTransform3D\fP & \fBoperator=\fP (\fBTransform3D\fP &&rhs) noexcept=default"
.br
.ti -1c
.RI "\fBVector3D\fP \fBgetPosition\fP () const noexcept"
.br
.ti -1c
.RI "float \fBgetPositionX\fP () const noexcept"
.br
.ti -1c
.RI "float \fBgetPositionY\fP () const noexcept"
.br
.ti -1c
.RI "float \fBgetPositionZ\fP () const noexcept"
.br
.ti -1c
.RI "float \fBgetScale\fP () const noexcept"
.br
.ti -1c
.RI "\fBVector3D\fP \fBgetRotationAxis\fP () const noexcept"
.br
.ti -1c
.RI "float \fBgetRotationAngle\fP () const noexcept"
.br
.ti -1c
.RI "ComponentType \fBgetComponentType\fP () const noexcept"
.br
.ti -1c
.RI "void \fBsetScale\fP (float scale) noexcept"
.br
.ti -1c
.RI "void \fBsetRotationAxis\fP (const \fBVector3D\fP &rotationAxis) noexcept"
.br
.ti -1c
.RI "void \fBsetRotationAngle\fP (float rotationAngle) noexcept"
.br
.ti -1c
.RI "void \fBsetPosition\fP (const \fBVector3D\fP &position) noexcept"
.br
.ti -1c
.RI "void \fBmoveX\fP (float x) noexcept"
.br
.ti -1c
.RI "void \fBmoveY\fP (float y) noexcept"
.br
.ti -1c
.RI "void \fBmoveZ\fP (float z) noexcept"
.br
.ti -1c
.RI "void \fBsetX\fP (float x) noexcept"
.br
.ti -1c
.RI "void \fBsetY\fP (float y) noexcept"
.br
.ti -1c
.RI "void \fBsetZ\fP (float z) noexcept"
.br
.ti -1c
.RI "void \fBaddX\fP (float x) noexcept"
.br
.ti -1c
.RI "void \fBaddY\fP (float y) noexcept"
.br
.ti -1c
.RI "void \fBaddZ\fP (float z) noexcept"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr ComponentType \fBTYPE\fP = ComponentType::TRANSFORM"
.br
.in -1c
.SH "Member Function Documentation"
.PP 
.SS "void Transform3D::addX (float x)\fC [noexcept]\fP"
Adds the given value to the x position\&.
.PP
\fBParameters\fP
.RS 4
\fIx\fP The x position of the transform\&. 
.RE
.PP

.SS "void Transform3D::addY (float y)\fC [noexcept]\fP"
Adds the given value to the y position\&.
.PP
\fBParameters\fP
.RS 4
\fIy\fP The amount to add to the y position\&. 
.RE
.PP

.SS "void Transform3D::addZ (float z)\fC [noexcept]\fP"
Adds the given value to the z-coordinate of the position\&.
.PP
\fBParameters\fP
.RS 4
\fIz\fP The amount to add to the z position\&. 
.RE
.PP

.SS "ComponentType Transform3D::getComponentType () const\fC [virtual]\fP, \fC [noexcept]\fP"
It returns the type of the component\&.
.PP
\fBReturns\fP
.RS 4
The type of the component\&. 
.RE
.PP

.PP
Implements \fBComponent\fP\&.
.SS "\fBVector3D\fP Transform3D::getPosition () const\fC [noexcept]\fP"
This function returns the position of the \fBTransform3D\fP object\&.
.PP
\fBReturns\fP
.RS 4
The position of the object\&. 
.RE
.PP

.SS "float Transform3D::getPositionX () const\fC [noexcept]\fP"
This function returns the x position of the object\&.
.PP
\fBReturns\fP
.RS 4
The x position of the position_ vector\&. 
.RE
.PP

.SS "float Transform3D::getPositionY () const\fC [noexcept]\fP"
This function returns the y-coordinate of the position vector\&.
.PP
\fBReturns\fP
.RS 4
The y position of the object\&. 
.RE
.PP

.SS "float Transform3D::getPositionZ () const\fC [noexcept]\fP"
This function returns the z-coordinate of the position vector\&.
.PP
\fBReturns\fP
.RS 4
The z position of the object\&. 
.RE
.PP

.SS "float Transform3D::getRotationAngle () const\fC [noexcept]\fP"
This function returns the rotation angle of the object\&.
.PP
\fBReturns\fP
.RS 4
The rotation angle of the object\&. 
.RE
.PP

.SS "\fBVector3D\fP Transform3D::getRotationAxis () const\fC [noexcept]\fP"
This function returns the rotation axis of the transform\&.
.PP
\fBReturns\fP
.RS 4
The rotation axis of the transform\&. 
.RE
.PP

.SS "float Transform3D::getScale () const\fC [noexcept]\fP"
This function returns the scale of the object\&.
.PP
\fBReturns\fP
.RS 4
The scale of the object\&. 
.RE
.PP

.SS "void Transform3D::moveX (float x)\fC [noexcept]\fP"
It moves the object in the x direction\&.
.PP
\fBParameters\fP
.RS 4
\fIx\fP The amount to move the object in the x direction\&. 
.RE
.PP

.SS "void Transform3D::moveY (float y)\fC [noexcept]\fP"
It moves the object in the Y direction\&.
.PP
\fBParameters\fP
.RS 4
\fIy\fP The amount to move the object in the y direction\&. 
.RE
.PP

.SS "void Transform3D::moveZ (float z)\fC [noexcept]\fP"
It moves the object in the z direction\&.
.PP
\fBParameters\fP
.RS 4
\fIz\fP The amount to move the object in the z direction\&. 
.RE
.PP

.SS "void Transform3D::setPosition (const \fBVector3D\fP & position)\fC [noexcept]\fP"
Sets the position of the transform
.PP
\fBParameters\fP
.RS 4
\fIposition\fP The position of the object\&. 
.RE
.PP

.SS "void Transform3D::setRotationAngle (float angle)\fC [noexcept]\fP"
Sets the rotation angle of the transform\&.
.PP
\fBParameters\fP
.RS 4
\fIangle\fP The angle of rotation in degrees\&. 
.RE
.PP

.SS "void Transform3D::setRotationAxis (const \fBVector3D\fP & rotation_axis)\fC [noexcept]\fP"
This function sets the rotation axis of the transform
.PP
\fBParameters\fP
.RS 4
\fIrotation_axis\fP The axis of rotation\&. 
.RE
.PP

.SS "void Transform3D::setScale (float scale)\fC [noexcept]\fP"
Sets the scale of the transform
.PP
\fBParameters\fP
.RS 4
\fIscale\fP The scale of the object\&. 
.RE
.PP

.SS "void Transform3D::setX (float x)\fC [noexcept]\fP"
Sets the x position of the transform\&.
.PP
\fBParameters\fP
.RS 4
\fIx\fP The x position of the transform\&. 
.RE
.PP

.SS "void Transform3D::setY (float y)\fC [noexcept]\fP"
Sets the y position of the transform\&.
.PP
\fBParameters\fP
.RS 4
\fIy\fP The y position of the transform\&. 
.RE
.PP

.SS "void Transform3D::setZ (float z)\fC [noexcept]\fP"
Sets the z position of the \fBTransform3D\fP
.PP
\fBParameters\fP
.RS 4
\fIz\fP The z-coordinate of the position\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Indie Studio from the source code\&.
