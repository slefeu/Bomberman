.TH "Bomb" 3 "Wed Jun 15 2022" "Version 1.0" "Indie Studio" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Bomb
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBEntity\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBBomb\fP (\fBVector3D\fP pos, \fBPlayer\fP &p, \fBModel3D\fP &newModel, int bombSize, \fBGameData\fP &data)"
.br
.ti -1c
.RI "\fBBomb\fP (const \fBBomb\fP &other) noexcept=delete"
.br
.ti -1c
.RI "\fBBomb\fP (\fBBomb\fP &&other) noexcept=delete"
.br
.ti -1c
.RI "\fBBomb\fP & \fBoperator=\fP (const \fBBomb\fP &rhs) noexcept=delete"
.br
.ti -1c
.RI "\fBBomb\fP & \fBoperator=\fP (\fBBomb\fP &&rhs) noexcept=delete"
.br
.ti -1c
.RI "void \fBUpdate\fP () final"
.br
.ti -1c
.RI "void \fBexplode\fP () noexcept"
.br
.ti -1c
.RI "void \fBOnCollisionEnter\fP (std::unique_ptr< \fBEntity\fP > &other) noexcept final"
.br
.ti -1c
.RI "int \fBgetLifeTime\fP () const noexcept"
.br
.ti -1c
.RI "void \fBsetLifeTime\fP (const int &newLifeTime) noexcept"
.br
.ti -1c
.RI "int \fBgetOwnerId\fP () const noexcept"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Bomb::Bomb (\fBVector3D\fP pos, \fBPlayer\fP & p, \fBModel3D\fP & newModel, int bombSize, \fBGameData\fP & data)"
It creates a bomb at the given position, with the given size, and the given player
.PP
\fBParameters\fP
.RS 4
\fIpos\fP the position of the bomb 
.br
\fIp\fP The player who dropped the bomb 
.br
\fInewModel\fP The model of the bomb 
.br
\fIbombSize\fP the size of the bomb, which is the number of blocks it will destroy 
.br
\fIdata\fP The \fBGameData\fP object, which contains all the data needed for the game\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void Bomb::explode ()\fC [noexcept]\fP"
It creates the fire and destroys the bomb
.PP
\fBReturns\fP
.RS 4
A reference to the fire vector\&. 
.RE
.PP

.SS "int Bomb::getLifeTime () const\fC [noexcept]\fP"
Get the life time of the bomb\&.
.PP
\fBReturns\fP
.RS 4
The lifeTime variable is being returned\&. 
.RE
.PP

.SS "int Bomb::getOwnerId () const\fC [noexcept]\fP"
Returns the id of the player who owns this bomb\&.
.PP
\fBReturns\fP
.RS 4
The id of the player who owns the bomb\&. 
.RE
.PP

.SS "void Bomb::OnCollisionEnter (std::unique_ptr< \fBEntity\fP > & other)\fC [final]\fP, \fC [virtual]\fP, \fC [noexcept]\fP"
If the bomb collides with a wall, explode
.PP
\fBParameters\fP
.RS 4
\fIother\fP The entity that collided with this entity\&. 
.RE
.PP

.PP
Implements \fBEntity\fP\&.
.SS "void Bomb::setLifeTime (const int & newLifeTime)\fC [noexcept]\fP"
Sets the life time of the bomb\&.
.PP
\fBParameters\fP
.RS 4
\fInewLifeTime\fP The new life time of the bomb\&. 
.RE
.PP

.SS "void Bomb::Update ()\fC [final]\fP, \fC [virtual]\fP"
It updates the bomb's timer, checks if it's time to explode, checks if it's time to become solid, and animates the bomb
.PP
\fBReturns\fP
.RS 4
A pointer to the bomb object\&. 
.RE
.PP

.PP
Implements \fBEntity\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Indie Studio from the source code\&.
