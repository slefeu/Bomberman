.TH "Render" 3 "Wed Jun 15 2022" "Version 1.0" "Indie Studio" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Render
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBComponent\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBRender\fP (\fBModel3D\fP &model) noexcept"
.br
.ti -1c
.RI "\fBRender\fP (const \fBRender\fP &other) noexcept=default"
.br
.ti -1c
.RI "\fBRender\fP (\fBRender\fP &&other) noexcept=default"
.br
.ti -1c
.RI "\fBRender\fP & \fBoperator=\fP (const \fBRender\fP &rhs) noexcept=delete"
.br
.ti -1c
.RI "\fBRender\fP & \fBoperator=\fP (\fBRender\fP &&rhs) noexcept=delete"
.br
.ti -1c
.RI "void \fBdisplay\fP (const \fBTransform3D\fP &transform) noexcept"
.br
.ti -1c
.RI "void \fBsetRenderType\fP (const RenderType &type) noexcept"
.br
.ti -1c
.RI "void \fBsetColor\fP (const std::array< unsigned char, 3 > &color) noexcept"
.br
.ti -1c
.RI "RenderType \fBgetRenderType\fP () const noexcept"
.br
.ti -1c
.RI "ComponentType \fBgetComponentType\fP () const noexcept"
.br
.ti -1c
.RI "\fBAnimation\fP & \fBgetAnimation\fP () noexcept"
.br
.ti -1c
.RI "\fBModel3D\fP & \fBgetModel\fP () noexcept"
.br
.ti -1c
.RI "void \fBshow\fP (bool show) noexcept"
.br
.ti -1c
.RI "bool \fBisShow\fP () const noexcept"
.br
.ti -1c
.RI "void \fBdisplayModel\fP (const \fBTransform3D\fP &transform, const \fBVector3D\fP &pos) noexcept"
.br
.ti -1c
.RI "void \fBdisplayModelV\fP (const \fBTransform3D\fP &transform, const \fBVector3D\fP &pos, const \fBVector3D\fP &axis, float angle) noexcept"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr ComponentType \fBTYPE\fP = ComponentType::RENDER"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Render::Render (\fBModel3D\fP & model)\fC [noexcept]\fP"
\fBRender::Render(Model3D& model)\fP noexcept : color_(Colors::C_WHITE) , model_(model) , animation_() { }
.PP
\fBParameters\fP
.RS 4
\fImodel\fP The model to render\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void Render::display (const \fBTransform3D\fP & transform)\fC [noexcept]\fP"
It draws the model, or the animation, or the model with rotation, or the animation with rotation, or the model with rotation and animation, or the animation with rotation and model, or the model with animation and rotation, or the animation with model and rotation
.PP
\fBParameters\fP
.RS 4
\fItransform\fP The transform of the object that the render is attached to\&.
.RE
.PP
\fBReturns\fP
.RS 4
A reference to the \fBRender\fP object\&. It draws the model at the position, rotation, and scale of the transform
.RE
.PP
\fBParameters\fP
.RS 4
\fItransform\fP The transform of the object that the render is attached to\&.
.RE
.PP
\fBReturns\fP
.RS 4
A reference to the \fBRender\fP object\&. 
.RE
.PP

.SS "void Render::displayModel (const \fBTransform3D\fP & transform, const \fBVector3D\fP & pos)\fC [noexcept]\fP"
It displays a model at a given position, with a given rotation axis and angle
.PP
\fBParameters\fP
.RS 4
\fItransform\fP The transform of the model\&. 
.br
\fIpos\fP The position of the model\&. 
.RE
.PP

.SS "void Render::displayModelV (const \fBTransform3D\fP & transform, const \fBVector3D\fP & pos, const \fBVector3D\fP & axis, float angle)\fC [noexcept]\fP"
It draws the model at the given position, with the given rotation, and with the given scale
.PP
\fBParameters\fP
.RS 4
\fItransform\fP The transform of the object\&. 
.br
\fIpos\fP The position of the model\&. 
.br
\fIaxis\fP The axis of rotation\&. 
.br
\fIangle\fP the angle of rotation 
.RE
.PP

.SS "\fBAnimation\fP & Render::getAnimation ()\fC [noexcept]\fP"
It returns a reference to the animation object
.PP
\fBReturns\fP
.RS 4
A reference to the animation_ member variable\&. 
.RE
.PP

.SS "ComponentType Render::getComponentType () const\fC [virtual]\fP, \fC [noexcept]\fP"
It returns the type of the component
.PP
\fBReturns\fP
.RS 4
The component type\&. 
.RE
.PP

.PP
Implements \fBComponent\fP\&.
.SS "\fBModel3D\fP & Render::getModel ()\fC [noexcept]\fP"
This function returns a reference to the model_ member variable\&.
.PP
\fBReturns\fP
.RS 4
A reference to the model_ member variable\&. 
.RE
.PP

.SS "RenderType Render::getRenderType () const\fC [noexcept]\fP"
This function returns the type of render\&.
.PP
\fBReturns\fP
.RS 4
The type of render\&. 
.RE
.PP

.SS "bool Render::isShow () const\fC [noexcept]\fP"
\fCbool \fBRender::isShow() const \fPnoexcept\fP
.PP
The function returns a boolean value\&. The function is a member of the class \fC\fBRender\fP\fP\&. The function is a constant function\&. The function does not throw an exception
.PP
\fBReturns\fP
.RS 4
A boolean value\&. 
.RE
.PP

.SS "void Render::setColor (const std::array< unsigned char, 3 > & color)\fC [noexcept]\fP"
It sets the color of the render object\&.
.PP
\fBParameters\fP
.RS 4
\fIcolor\fP The color to set the renderer to\&. 
.RE
.PP

.SS "void Render::setRenderType (const RenderType & type)\fC [noexcept]\fP"
This function sets the render type to the given render type\&.
.PP
\fBParameters\fP
.RS 4
\fItype\fP The type of render\&. 
.RE
.PP

.SS "void Render::show (bool show)\fC [noexcept]\fP"
It sets the show_ member variable to the value of the show parameter
.PP
\fBParameters\fP
.RS 4
\fIshow\fP Whether or not to show the window\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Indie Studio from the source code\&.
