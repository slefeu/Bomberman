.TH "Timer" 3 "Wed Jun 15 2022" "Version 1.0" "Indie Studio" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Timer
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBTimer\fP (float lifeTime) noexcept"
.br
.ti -1c
.RI "\fBTimer\fP (const \fBTimer\fP &other) noexcept=delete"
.br
.ti -1c
.RI "\fBTimer\fP (\fBTimer\fP &&other) noexcept=delete"
.br
.ti -1c
.RI "\fBTimer\fP & \fBoperator=\fP (const \fBTimer\fP &rhs) noexcept=delete"
.br
.ti -1c
.RI "\fBTimer\fP & \fBoperator=\fP (\fBTimer\fP &&rhs) noexcept=delete"
.br
.ti -1c
.RI "float \fBgetTime\fP () const noexcept"
.br
.ti -1c
.RI "void \fBsetLifeTime\fP (float time) noexcept"
.br
.ti -1c
.RI "void \fBupdateTimer\fP () noexcept"
.br
.ti -1c
.RI "void \fBresetTimer\fP () noexcept"
.br
.ti -1c
.RI "bool \fBisTimerDone\fP () const noexcept"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Timer::Timer (float time)\fC [noexcept]\fP"
It initializes the life_time_ and default_ variables to the time parameter
.PP
\fBParameters\fP
.RS 4
\fItime\fP The time in seconds that the timer will run for\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "float Timer::getTime () const\fC [noexcept]\fP"
This function returns the life time of the timer
.PP
\fBReturns\fP
.RS 4
The life_time_ variable is being returned\&. 
.RE
.PP

.SS "bool Timer::isTimerDone () const\fC [noexcept]\fP"
This function returns true if the timer is done, false otherwise\&.
.PP
\fBReturns\fP
.RS 4
A boolean value\&. 
.RE
.PP

.SS "void Timer::resetTimer ()\fC [noexcept]\fP"
Resets the timer to the default value\&. 
.SS "void Timer::setLifeTime (float time)\fC [noexcept]\fP"
Sets the life time of the timer\&.
.PP
\fBParameters\fP
.RS 4
\fItime\fP The time in seconds that the timer will run for\&. 
.RE
.PP

.SS "void Timer::updateTimer ()\fC [noexcept]\fP"
If the timer's life time is greater than 0, subtract the delta time from the timer's life time 

.SH "Author"
.PP 
Generated automatically by Doxygen for Indie Studio from the source code\&.
